spring.application.name=Userservice
## ===============================
## = DATABASE CONFIGURATION =
## ===============================
## i have used port forwarding concept to connect to vm port 3306 on which sql is running
## my vm details ubuntu
#ssh command _; >ssh vboxuser@127.0.0.1 -p 2222, >ssh kafka@127.0.0.1 -p 2222
#ubuntu user-> vboxuser
#ubuntu pass -> 12345
#kafka
#user->kafak
#password->12345


spring.datasource.url=jdbc:mysql://127.0.0.1:44406/userservice?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=12345
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ===============================
# = JPA / HIBERNATE CONFIGURATION =
# ===============================

# options: none | update | create | create-drop
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

server.port=9810

spring.kafka.bootstrap-servers=127.0.0.1:9092
spring.kafka.topic.name=testingself_json
spring.kafka.topic-json.name=testingself_json
spring.kafka.consumer.value-deserializer =com.example.Userservice.deserializer.UserInfoDeserializer
spring.kafka.consumer.group-id=userinfo-consumer-group
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

