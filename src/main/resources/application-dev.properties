spring.application.name=Userservice

#If application run outside docker in my local system
spring.datasource.url=jdbc:mysql://127.0.0.1:44406/userservice?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true

spring.datasource.username=root
spring.datasource.password=12345
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ===============================
# = JPA / HIBERNATE CONFIGURATION =
# ===============================

# options: none | update | create | create-drop
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

#if 9810 is used by vm 9810 which further binds to docker userservice then use port 9811
server.port=9811

#server.port=9810

#If application run outside docker in my local system
spring.kafka.bootstrap-servers=127.0.0.1:9092

spring.kafka.topic.name=testing_json
spring.kafka.topic-json.name=testing_json
spring.kafka.consumer.value-deserializer =com.example.Userservice.deserializer.UserInfoDeserializer
spring.kafka.consumer.group-id=userinfo-consumer-group
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

logging.level.org.springframework.kafka.listener.KafkaMessageListenerContainer=ERROR
logging.level.org.apache.kafka.clients.consumer=ERROR